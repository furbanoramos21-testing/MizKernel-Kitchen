# This is for Building the Android Kernel
# Builder test based for MizKernel v0.2 builder
# modifying to test A05s kernel gki building
# Note that the kernel now have a included build script inside, so... we just need to execute build.sh and pull files
# Thanks to ravindu644 for kernel source modifications


name: "Android Kernel Builder - A05s test"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Select branch"
        required: true
        default: "A057FXXU7CXK6"
        type: choice
        options:
          - "A057FXXU7CXK6"
          - "A057FXXU7CXK6-permissive"
          - "M145FXXU4CXG4"
      notify_telegram_channel:
        description: "Notify the Telegram Bot (Make sure you set up the secrets with variable named: TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID)"
        required: true
        default: true
        type: boolean
      use_uc_boot_template:
        description: "Use the UC Boot Template"
        required: true
        default: true
        type: boolean

permissions:
  contents: write


jobs:
  build:
    name: "Build Kernel"
    runs-on: ubuntu-22.04
    steps:
        - name: "Checkout"
          uses: actions/checkout@v2

        - name: "Set up Timezone"
          run: |
            # Only set time to Asia/Manila and NEVER ANY TZ
            # ANY SET OF TZ THAN MANILA IS A VIOLATION OF ETIQUETTE IN THE ORG
            sudo timedatectl set-timezone Asia/Manila

       # - name: "Clean up Bloated Actions"
       #   uses: rokibhasansagar/slimhub_actions@main
       #   with:
       #     retain: "docker_imgcache,docker_buildkit,container_tools,nodejs_npm,toolcache_node"

        - name: "Set up dependencies"
          run: |
            sudo apt update
            sudo apt upgrade -y
            sudo apt install aria2 libncurses5 git python-is-python3 python2 python3 wget curl libc6-dev tar -y
            sudo apt install cpio default-jdk git-core gnupg flex bison gperf build-essential zip curl aria2 libc6-dev libncurses5-dev x11proto-core-dev libx11-dev libreadline6-dev libgl1-mesa-glx libgl1-mesa-dev python3 make sudo gcc g++ bc grep tofrodos python3-markdown libxml2-utils xsltproc zlib1g-dev -y
          
        - name: "Clone the Kernel"
          run: |
            git clone https://github.com/furbanoramos21-testing/android_kernel_a057 kernel
            cd kernel
            git checkout ${{ github.event.inputs.version }}
            cd ..
        

        - name: "Build the kernel"
          run: |
            cd kernel
            ./build.sh
            cd ..

        - name: "To Github Artifact"
          uses: actions/upload-artifact@v4
          with:
            name: "Kernel-${{github.run_id}}-artifacts"
            path: |
              kernel/out/arch/arm64/boot/Image
              kernel/build/boot.img
              kernel/build/KernelSU-Next-SM-A057F-${BUILD_KERNEL_VERSION}.tar
          continue-on-error: true



        - name: "Deploy to Github Release"
          uses: softprops/action-gh-release@v2
          with:
            files: |
              out/*
            name: "Kernel - ${{github.run_id}} - ${{ github.event.inputs.version }}"
            tag_name: "${{ github.run_id }}"
            body: |
              ### Test build </br>
              
              Autogenerated by github actions

          env:
            GITHUB_TOKEN: ${{ secrets.GH_FALLBACK_TOKEN }} 


        - name: "Notify Telegram Channel"
          if: ${{ github.event.inputs.notify_telegram_channel == 'true' }}
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_CHAT_ID }}
            token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            message: |
              Build Completed 
              Action ID: ${{ github.run_id }}
              Apatch: ${{ github.event.inputs.apatch }}
              Release type: ${{ github.event.inputs.version }}

        
